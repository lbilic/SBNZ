//created on: Apr 22, 2019
package com.siem;
import java.util.Date;
import com.siem.siem.facts.SuccessfulLogin;
import com.siem.siem.facts.FailedLogin;
import com.siem.siem.events.FailedLoginSameSystemEvent;
import com.siem.siem.events.FailedLoginSameUsernameEvent;
import com.siem.siem.events.InactiveAccountLoginEvent;
import com.siem.siem.events.MultipleFailedLoginsSameIpAddressEvent;
import java.util.ArrayList;

declare FailedLogin
		@role(event)
end
rule "Multiple failed logins on the same machine"
    when
    	$fl: FailedLogin($ipAddress: ipAddress, $timestamp: timestamp)
    	not FailedLogin(ipAddress == $ipAddress, this before $fl)
        $list: ArrayList(size >= 2) from collect(FailedLogin(ipAddress == $ipAddress, ((new Date()).getTime() - $fl.getTimestamp().getTime()) / (1000) < 10))
    then
        System.out.println($list.size() + " neuspesnih loginova sa iste masine u poslednjih 10s");
		insert(new FailedLoginSameSystemEvent( $fl.getIpAddress(), "Multiple failed logins on the same machine"));
end

declare FailedLogin
		@role(event)
end
rule "Multiple failed logins with the same username"
    when
        $fl1: FailedLogin()
        $list: ArrayList(size > 0) from collect(FailedLogin(username == $fl1.getUsername(), 
        					((timestamp.getTime()-$fl1.getTimestamp().getTime())/1000) > 0,
							((timestamp.getTime()-$fl1.getTimestamp().getTime())/1000) < 10))
    then
        System.out.println($list.size() + " neuspesnih loginova sa istim username-om u poslednjih 10s");
		insert(new FailedLoginSameUsernameEvent($fl1.getIpAddress(), "Multiple failed logins with the same username"));
end

rule "Inactive account login"
    when
    	$sl1: SuccessfulLogin()
        $sl2: SuccessfulLogin( username == $sl1.getUsername(), ((new Date()).getTime() - $sl1.getTimestamp().getTime()) / (24 * 60 * 60 * 1000) > 90 )
    then
        System.out.println("Login na nalog koji je bio neaktivan 90 ili vise dana!");
		insert(new InactiveAccountLoginEvent($sl1.getUsername(), "Inactive account login"));
        drools.halt();
end

declare FailedLogin
		@role(event)
end
rule "Multiple unique failed logins from the same ip address"
    when
    	$fl: FailedLogin($ipAddress: ipAddress, $timestamp: timestamp)
    	not FailedLogin(ipAddress == $ipAddress, this before $fl)
        $list: ArrayList(size >= 15) from collect(FailedLogin(systemType != $fl.getSystemType(), this == $fl, ipAddress == $ipAddress, ((new Date()).getTime() - $fl.getTimestamp().getTime) / (24 * 60 * 60 * 1000) < 5))
    then
        System.out.println($list.size() + " failed logins from " + $ipAddress);
        insert(new MultipleFailedLoginsSameIpAddressEvent($fl.getIpAddress(), "Multiple unique failed logins from the same ip addressn"));
end

rule "ERROR log"
	when
	
	then
end
